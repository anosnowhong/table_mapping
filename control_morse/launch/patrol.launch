<launch>

	<!--mongodb service-->
	<include file="$(find mongodb_store)/launch/mongodb_store.launch">
	</include>

    <!-- provide service for getmap, and publish ROI cloud which will stored by soma_io to ws_observation-->
    <node pkg="table_detection" type="grabber" name="grabber" output="screen">
        <param name="min_distance" value="0.0"/>
        <param name="max_distance" value="3.5"/>
    </node>

    <!--soma_io node communicate with mongoDB to store the ROI cloud for later use -->
	<!--data is stored in message_store=>ws_observation (including PC2, Octomap and TF)-->
    <node pkg="soma_io" type="datasets_importer" name="datasets_importer" output="screen" args="-m online -t /pointcloud/tomongo">
	</node>

    <!-- Provide PTU control service to do a 'whole' or 'single' scan, called by getmap-->
	<node pkg="control_morse" type="ptu_control" name="ptu_control" output="screen">
	    <param name="pan_interval" value="30"/>
	    <param name="tilt" value="30"/>
	</node>

	<!-- Backend registration service, called by grabber -->
	<node pkg="table_registration" type="db_cloud_registration" name="db_cloud_registration" output="screen">
	    <param name="pan_interval" value="30"/>
	</node>

    <!--table extraction service-->
	<node pkg="table_detection" type="db_cloud_extraction" name="db_cloud_extraction" output="screen">
	</node>
	<node pkg="table_detection" type="db_table_extraction" name="db_table_extraction" output="screen">
	</node>


    <!-- launch map processing node, get the patrol goal and mark on the map-->
    <node pkg="control_morse" type="getmap" name="getmap" output="screen">
		<param name="search_range" value="20"/>
		<param name="goal_waiting_time" value="100"/>
    </node>
    
</launch>
